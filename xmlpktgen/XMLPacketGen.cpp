/*
	------------------------------------------------------------------------------------
	LICENSE:
	------------------------------------------------------------------------------------
	This file is part of EVEmu: EVE Online Server Emulator
	Copyright 2006 - 2008 The EVEmu Team
	For the latest information visit http://evemu.mmoforge.org
	------------------------------------------------------------------------------------
	This program is free software; you can redistribute it and/or modify it under
	the terms of the GNU Lesser General Public License as published by the Free Software
	Foundation; either version 2 of the License, or (at your option) any later
	version.

	This program is distributed in the hope that it will be useful, but WITHOUT
	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

	You should have received a copy of the GNU Lesser General Public License along with
	this program; if not, write to the Free Software Foundation, Inc., 59 Temple
	Place - Suite 330, Boston, MA 02111-1307, USA, or go to
	http://www.gnu.org/copyleft/lesser.txt.
	------------------------------------------------------------------------------------
*/

#include "XMLPacketGen.h"
#include "../common/logsys.h"
#include <string>
#include <map>
#include <errno.h>
#include <string.h>
#include <stdio.h>
#include "HeaderGenerator.h"
#include "ImplGenerator.h"

static const char *GenFileComment = 
"/*\n"
"\t------------------------------------------------------------------------------------\n"
"\tThis file is automatically generated, DO NOT EDIT IT DIRECTLY.\n"
"\t------------------------------------------------------------------------------------\n"
"\t(If you need to customize an object, you must copy that object\n"
"\tinto another source file, and give up the ability to generate it)\n"
"\t------------------------------------------------------------------------------------\n"
"\tLICENSE:\n"
"\t------------------------------------------------------------------------------------\n"
"\tThis file is part of EVEmu: EVE Online Server Emulator\n"
"\tCopyright 2006 - 2008 The EVEmu Team\n"
"\tFor the latest information visit http://evemu.mmoforge.org\n"
"\t------------------------------------------------------------------------------------\n"
"\tThis program is free software; you can redistribute it and/or modify it under\n"
"\tthe terms of the GNU Lesser General Public License as published by the Free Software\n"
"\tFoundation; either version 2 of the License, or (at your option) any later\n"
"\tversion.\n"
"\n"
"\tThis program is distributed in the hope that it will be useful, but WITHOUT\n"
"\tANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n"
"\tFOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n"
"\n"
"\tYou should have received a copy of the GNU Lesser General Public License along with\n"
"\tthis program; if not, write to the Free Software Foundation, Inc., 59 Temple\n"
"\tPlace - Suite 330, Boston, MA 02111-1307, USA, or go to\n"
"\thttp://www.gnu.org/copyleft/lesser.txt.\n"
"\t------------------------------------------------------------------------------------\n"
"*/\n"
;

static std::string FNameToDef(const char *buf) {
	char *obuf = new char[strlen(buf)+10];
	char *ptr = obuf;
	const char *bptr = buf;
	*ptr = '_'; ++ptr;
	*ptr = '_'; ++ptr;
	while(*bptr != '\0') {
		if(*bptr == '/' || *bptr == ':' || *bptr == '\\' || *bptr == '.' || *bptr == '-')
			*ptr = '_';
		else
			*ptr = *bptr;
		++ptr;
		++bptr;
	}
	*ptr = '_'; ++ptr;
	*ptr = '_'; ++ptr;
	*ptr = '\0';
	std::string b(obuf);
	delete[] obuf;
	return(b);
}

XMLPacketGen::XMLPacketGen() {
}

XMLPacketGen::~XMLPacketGen() {
}

bool XMLPacketGen::GenPackets(
	const char *xml_file, 
	const char *out_h, 
	const char *out_cpp)
{
	TiXmlDocument doc( xml_file );
	if(!doc.LoadFile()) {
		_log(COMMON__ERROR, "Failed to parse XML file '%s' line %d: %s", xml_file, doc.ErrorRow(), doc.ErrorDesc());
		return false;
	}
	
	TiXmlElement *root = doc.RootElement ();
	if(root == NULL) {
		_log(COMMON__ERROR, "Unable to find root 'Elements' in %s", xml_file);
		return false;
	}

	FILE *h = fopen(out_h, "w");
	if(h == NULL) {
		_log(COMMON__ERROR, "Unable to open output file %s: %s", out_h, strerror(errno));
		return false;
	}
	FILE *cpp = fopen(out_cpp, "w");
	if(cpp == NULL) {
		_log(COMMON__ERROR, "Unable to open output file %s: %s", out_cpp, strerror(errno));
		fclose(h);
		return false;
	}

	std::string def = FNameToDef(out_h);

	
	/*
     * Generate .h file:
     *
     *
    */
	//header:
	fprintf(h, 
		"%s\n"
		"#ifndef %s\n"
		"#define %s\n"
		"\n"
		"#include <string>\n"
		"#include <vector>\n"
		"#include <map>\n"
		"#include \"../common/common.h\"\n"
		"#include \"../common/logsys.h\"\n"
		"#include \"../common/PyRep.h\"\n"
		"\n"
		"\n"
		"",
		GenFileComment, def.c_str(), def.c_str()
	);
	//body:
	ClassHeaderGenerator h_gen;
	h_gen.Generate(h, root);
	//footer:
	fprintf(h,
		"\n\n"
		"#endif\n\n\n"
	);
	
	/*
     * Generate .cpp file:
     *
     *
    */
	//header:
	fprintf(cpp, 
		"%s\n"
		"\n"
		"#include <string>\n"
		"#include \"%s\"\n"
		"#include \"../common/PyRep.h\"\n"
		"\n"
		"\n"
		"\n",
		GenFileComment, out_h
	);
	//body:
	ClassImplementationGenerator cpp_gen;
	cpp_gen.Generate(cpp, root);
	//footer:
	fprintf(cpp,
		"\n\n"
	);
	
	
	return true;
}
